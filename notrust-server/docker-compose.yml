version: '3.8'

services:
  assets:
    build:
      context: "."
      target: "assets"
      args:
        - "UID=${UID:-1000}"
        - "GID=${GID:-1000}"
        - "NODE_ENV=${NODE_ENV:-production}"
    env_file:
      - ".env"
    restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
    stop_grace_period: "0"
    tty: true
    volumes:
      - ".:/app"

  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  backend:
    build:
      context: "."
    ports:
      - "8081:8081"
    depends_on:
      - postgres
    networks:
      - notrust-net
    volumes:
      - "./static:/root/static"
      - "./templates:/root/templates"
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DB: ${DB_NAME}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      JWT_SECRET: ${JWT_SECRET}
    restart: unless-stopped

  #nginx:
  #  image: nginx:latest
  #  container_name: notrust_nginx
  #  ports:
  #    - "80:80"
  #  volumes:
  #    - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #  depends_on:
  #    - app
  #  networks:
  #    - notrust-net

networks:
  notrust-net:
    driver: bridge

volumes:
  postgres_data:

